import{S as Ce,i as Re,s as Te,y as ue,a as p,k as o,q as i,z as he,c as u,l,m as c,r as m,h as a,n as B,A as de,b as g,G as t,g as ge,d as ve,B as _e,H as Oe}from"../chunks/index.a65c0af5.js";import{I as De}from"../chunks/IconListItem.04ab5db2.js";import{s as Ge,I as Qe,T as We}from"../chunks/svgs.ff11b11c.js";function ze(H){let n,v;return{c(){n=o("a"),v=i("Github repo"),this.h()},l(h){n=l(h,"A",{target:!0,href:!0});var _=c(n);v=m(_,"Github repo"),_.forEach(a),this.h()},h(){B(n,"target","_blank"),B(n,"href","https://github.com/goldentoaste/screenCap")},m(h,_){g(h,n,_),t(n,v)},p:Oe,d(h){h&&a(n)}}}function Be(H){let n,v,h,_,D,d,b,N,$,G,r,I,q,M,E,U,F,L,V,j,S,J,K,x,X,Y,P,Z,ee,A,te,re,C,ae,se,R,ne,oe,T,ie,le,O,ce,Q,y,me,w,fe,pe,W;return n=new De({props:{path:Ge.github,key:"github",$$slots:{default:[ze]},$$scope:{ctx:H}}}),b=new Qe({props:{height:600,maxWidth:800,title:"Demo Images",items:[{desc:"Images pinned in front of other programs",src:"screencap/pinned.png"},{desc:"Right click menu showcasing the various features the program has at the moment",src:"screencap/menu.png"}]}}),$=new We({props:{input:[{name:"Gui",items:[{name:"Python",src:"icons/python.svg"},{name:"tkinter",src:"icons/tkinter.svg"},{name:"Qt",src:"icons/Qt.svg"}]},{name:"Others",items:[{name:"üõè Pillow"},{name:"Win32 api",src:"icons/windows.svg"},{name:"Nuitka",src:"icons/nuitka.svg"}]}]}}),{c(){ue(n.$$.fragment),v=p(),h=o("p"),_=i(`A cross platform desktop app(windows only currently) that handles all your\r
    screen capturing needs! Designed to be efficient and customizable, through\r
    the extensive use of rebindable hotkeys.`),D=p(),d=o("div"),ue(b.$$.fragment),N=p(),ue($.$$.fragment),G=i(`\r
\r
Some notable features:\r
\r
`),r=o("ul"),I=o("li"),q=i("Screen shot anything, anywhere"),M=p(),E=o("li"),U=i("Crop captures"),F=p(),L=o("li"),V=i("Pin image on top as a window, for reference"),j=p(),S=o("li"),J=i("Copy and paste the image to easily share it"),K=p(),x=o("li"),X=i("Save the captured image as multiple formats"),Y=p(),P=o("li"),Z=i("Paint and sketch on images"),ee=p(),A=o("li"),te=i('Tracks previously closed images in a "Recycle Bin" for future use'),re=p(),C=o("li"),ae=i("Rebindable hotkeys for most actions"),se=p(),R=o("li"),ne=i("Native global hotkeys for each OS"),oe=p(),T=o("li"),ie=i("Record a short .gif of region of screen (work in progress)"),le=p(),O=o("li"),ce=i("Supports Windows, Linux(soon), and MacOs(soon)"),Q=p(),y=o("p"),me=i("A demo built using Tkinter is currently available "),w=o("a"),fe=i("Here"),pe=i(`, currently I'm working to rebuild the program in Qt for better performance\r
    and cross platform compatibility.`),this.h()},l(e){he(n.$$.fragment,e),v=u(e),h=l(e,"P",{});var f=c(h);_=m(f,`A cross platform desktop app(windows only currently) that handles all your\r
    screen capturing needs! Designed to be efficient and customizable, through\r
    the extensive use of rebindable hotkeys.`),f.forEach(a),D=u(e),d=l(e,"DIV",{class:!0});var k=c(d);he(b.$$.fragment,k),N=u(k),he($.$$.fragment,k),k.forEach(a),G=m(e,`\r
\r
Some notable features:\r
\r
`),r=l(e,"UL",{});var s=c(r);I=l(s,"LI",{});var ye=c(I);q=m(ye,"Screen shot anything, anywhere"),ye.forEach(a),M=u(s),E=l(s,"LI",{});var be=c(E);U=m(be,"Crop captures"),be.forEach(a),F=u(s),L=l(s,"LI",{});var $e=c(L);V=m($e,"Pin image on top as a window, for reference"),$e.forEach(a),j=u(s),S=l(s,"LI",{});var ke=c(S);J=m(ke,"Copy and paste the image to easily share it"),ke.forEach(a),K=u(s),x=l(s,"LI",{});var we=c(x);X=m(we,"Save the captured image as multiple formats"),we.forEach(a),Y=u(s),P=l(s,"LI",{});var Ie=c(P);Z=m(Ie,"Paint and sketch on images"),Ie.forEach(a),ee=u(s),A=l(s,"LI",{});var Ee=c(A);te=m(Ee,'Tracks previously closed images in a "Recycle Bin" for future use'),Ee.forEach(a),re=u(s),C=l(s,"LI",{});var Le=c(C);ae=m(Le,"Rebindable hotkeys for most actions"),Le.forEach(a),se=u(s),R=l(s,"LI",{});var Se=c(R);ne=m(Se,"Native global hotkeys for each OS"),Se.forEach(a),oe=u(s),T=l(s,"LI",{});var xe=c(T);ie=m(xe,"Record a short .gif of region of screen (work in progress)"),xe.forEach(a),le=u(s),O=l(s,"LI",{});var Pe=c(O);ce=m(Pe,"Supports Windows, Linux(soon), and MacOs(soon)"),Pe.forEach(a),s.forEach(a),Q=u(e),y=l(e,"P",{});var z=c(y);me=m(z,"A demo built using Tkinter is currently available "),w=l(z,"A",{href:!0});var Ae=c(w);fe=m(Ae,"Here"),Ae.forEach(a),pe=m(z,`, currently I'm working to rebuild the program in Qt for better performance\r
    and cross platform compatibility.`),z.forEach(a),this.h()},h(){B(d,"class","top svelte-14kyk3d"),B(w,"href","https://github.com/goldentoaste/screenCap")},m(e,f){de(n,e,f),g(e,v,f),g(e,h,f),t(h,_),g(e,D,f),g(e,d,f),de(b,d,null),t(d,N),de($,d,null),g(e,G,f),g(e,r,f),t(r,I),t(I,q),t(r,M),t(r,E),t(E,U),t(r,F),t(r,L),t(L,V),t(r,j),t(r,S),t(S,J),t(r,K),t(r,x),t(x,X),t(r,Y),t(r,P),t(P,Z),t(r,ee),t(r,A),t(A,te),t(r,re),t(r,C),t(C,ae),t(r,se),t(r,R),t(R,ne),t(r,oe),t(r,T),t(T,ie),t(r,le),t(r,O),t(O,ce),g(e,Q,f),g(e,y,f),t(y,me),t(y,w),t(w,fe),t(y,pe),W=!0},p(e,[f]){const k={};f&1&&(k.$$scope={dirty:f,ctx:e}),n.$set(k)},i(e){W||(ge(n.$$.fragment,e),ge(b.$$.fragment,e),ge($.$$.fragment,e),W=!0)},o(e){ve(n.$$.fragment,e),ve(b.$$.fragment,e),ve($.$$.fragment,e),W=!1},d(e){_e(n,e),e&&a(v),e&&a(h),e&&a(D),e&&a(d),_e(b),_e($),e&&a(G),e&&a(r),e&&a(Q),e&&a(y)}}}class Me extends Ce{constructor(n){super(),Re(this,n,null,Be,Te,{})}}export{Me as default};
