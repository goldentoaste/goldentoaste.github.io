import{S as De,i as Ge,s as He,k as n,q as o,a as p,y as ve,l as i,m as l,r as c,h as r,c as u,z as _e,n as q,b as d,G as t,A as ye,g as be,d as $e,B as ke,H as Qe}from"../chunks/index.4db08ef9.js";import{I as We}from"../chunks/IconListItem.e8682a0f.js";import{s as ze,I as Be,T as Ne}from"../chunks/svgs.2b602a4c.js";function qe(M){let f,y;return{c(){f=n("a"),y=o("Github repo"),this.h()},l(g){f=i(g,"A",{target:!0,href:!0});var h=l(f);y=c(h,"Github repo"),h.forEach(r),this.h()},h(){q(f,"target","_blank"),q(f,"href","https://github.com/goldentoaste/screenCap")},m(g,h){d(g,f,h),t(f,y)},p:Qe,d(g){g&&r(f)}}}function Me(M){let f,y,g,h,G,k,U,H,v,b,F,$,Q,a,I,V,j,E,J,K,L,X,Y,S,Z,ee,x,te,re,P,ae,se,A,ne,oe,C,ie,le,R,ce,fe,T,me,pe,O,ue,W,_,he,w,de,ge,z;return h=new We({props:{path:ze.github,key:"github",$$slots:{default:[qe]},$$scope:{ctx:M}}}),b=new Be({props:{height:600,maxWidth:800,title:"Demo Images",items:[{desc:"Images pinned in front of other programs",src:"screencap/pinned.png"},{desc:"Right click menu showcasing the various features the program has at the moment",src:"screencap/menu.png"}]}}),$=new Ne({props:{input:[{name:"Gui",items:[{name:"Python",src:"icons/python.svg"},{name:"tkinter",src:"icons/tkinter.svg"},{name:"Qt",src:"icons/Qt.svg"}]},{name:"Others",items:[{name:"üõè Pillow"},{name:"Win32 api",src:"icons/windows.svg"},{name:"Nuitka",src:"icons/nuitka.svg"}]}]}}),{c(){f=n("h1"),y=o("Screencap :3"),g=p(),ve(h.$$.fragment),G=p(),k=n("p"),U=o(`A cross platform desktop app(windows only currently) that handles all your\r
    screen capturing needs! Designed to be efficient and customizable, through\r
    the extensive use of rebindable hotkeys.`),H=p(),v=n("div"),ve(b.$$.fragment),F=p(),ve($.$$.fragment),Q=o(`\r
\r
Some notable features:\r
\r
`),a=n("ul"),I=n("li"),V=o("Screen shot anything, anywhere"),j=p(),E=n("li"),J=o("Crop captures"),K=p(),L=n("li"),X=o("Pin image on top as a window, for reference"),Y=p(),S=n("li"),Z=o("Copy and paste the image to easily share it"),ee=p(),x=n("li"),te=o("Save the captured image as multiple formats"),re=p(),P=n("li"),ae=o("Paint and sketch on images"),se=p(),A=n("li"),ne=o('Tracks previously closed images in a "Recycle Bin" for future use'),oe=p(),C=n("li"),ie=o("Rebindable hotkeys for most actions"),le=p(),R=n("li"),ce=o("Native global hotkeys for each OS"),fe=p(),T=n("li"),me=o("Record a short .gif of region of screen (work in progress)"),pe=p(),O=n("li"),ue=o("Supports Windows, Linux(soon), and MacOs(soon)"),W=p(),_=n("p"),he=o("A demo built using Tkinter is currently available "),w=n("a"),de=o("Here"),ge=o(`, currently I'm working to rebuild the program in Qt for better performance\r
    and cross platform compatibility.`),this.h()},l(e){f=i(e,"H1",{});var m=l(f);y=c(m,"Screencap :3"),m.forEach(r),g=u(e),_e(h.$$.fragment,e),G=u(e),k=i(e,"P",{});var D=l(k);U=c(D,`A cross platform desktop app(windows only currently) that handles all your\r
    screen capturing needs! Designed to be efficient and customizable, through\r
    the extensive use of rebindable hotkeys.`),D.forEach(r),H=u(e),v=i(e,"DIV",{class:!0});var B=l(v);_e(b.$$.fragment,B),F=u(B),_e($.$$.fragment,B),B.forEach(r),Q=c(e,`\r
\r
Some notable features:\r
\r
`),a=i(e,"UL",{});var s=l(a);I=i(s,"LI",{});var we=l(I);V=c(we,"Screen shot anything, anywhere"),we.forEach(r),j=u(s),E=i(s,"LI",{});var Ie=l(E);J=c(Ie,"Crop captures"),Ie.forEach(r),K=u(s),L=i(s,"LI",{});var Ee=l(L);X=c(Ee,"Pin image on top as a window, for reference"),Ee.forEach(r),Y=u(s),S=i(s,"LI",{});var Le=l(S);Z=c(Le,"Copy and paste the image to easily share it"),Le.forEach(r),ee=u(s),x=i(s,"LI",{});var Se=l(x);te=c(Se,"Save the captured image as multiple formats"),Se.forEach(r),re=u(s),P=i(s,"LI",{});var xe=l(P);ae=c(xe,"Paint and sketch on images"),xe.forEach(r),se=u(s),A=i(s,"LI",{});var Pe=l(A);ne=c(Pe,'Tracks previously closed images in a "Recycle Bin" for future use'),Pe.forEach(r),oe=u(s),C=i(s,"LI",{});var Ae=l(C);ie=c(Ae,"Rebindable hotkeys for most actions"),Ae.forEach(r),le=u(s),R=i(s,"LI",{});var Ce=l(R);ce=c(Ce,"Native global hotkeys for each OS"),Ce.forEach(r),fe=u(s),T=i(s,"LI",{});var Re=l(T);me=c(Re,"Record a short .gif of region of screen (work in progress)"),Re.forEach(r),pe=u(s),O=i(s,"LI",{});var Te=l(O);ue=c(Te,"Supports Windows, Linux(soon), and MacOs(soon)"),Te.forEach(r),s.forEach(r),W=u(e),_=i(e,"P",{});var N=l(_);he=c(N,"A demo built using Tkinter is currently available "),w=i(N,"A",{href:!0});var Oe=l(w);de=c(Oe,"Here"),Oe.forEach(r),ge=c(N,`, currently I'm working to rebuild the program in Qt for better performance\r
    and cross platform compatibility.`),N.forEach(r),this.h()},h(){q(v,"class","top svelte-14kyk3d"),q(w,"href","https://github.com/goldentoaste/screenCap")},m(e,m){d(e,f,m),t(f,y),d(e,g,m),ye(h,e,m),d(e,G,m),d(e,k,m),t(k,U),d(e,H,m),d(e,v,m),ye(b,v,null),t(v,F),ye($,v,null),d(e,Q,m),d(e,a,m),t(a,I),t(I,V),t(a,j),t(a,E),t(E,J),t(a,K),t(a,L),t(L,X),t(a,Y),t(a,S),t(S,Z),t(a,ee),t(a,x),t(x,te),t(a,re),t(a,P),t(P,ae),t(a,se),t(a,A),t(A,ne),t(a,oe),t(a,C),t(C,ie),t(a,le),t(a,R),t(R,ce),t(a,fe),t(a,T),t(T,me),t(a,pe),t(a,O),t(O,ue),d(e,W,m),d(e,_,m),t(_,he),t(_,w),t(w,de),t(_,ge),z=!0},p(e,[m]){const D={};m&1&&(D.$$scope={dirty:m,ctx:e}),h.$set(D)},i(e){z||(be(h.$$.fragment,e),be(b.$$.fragment,e),be($.$$.fragment,e),z=!0)},o(e){$e(h.$$.fragment,e),$e(b.$$.fragment,e),$e($.$$.fragment,e),z=!1},d(e){e&&r(f),e&&r(g),ke(h,e),e&&r(G),e&&r(k),e&&r(H),e&&r(v),ke(b),ke($),e&&r(Q),e&&r(a),e&&r(W),e&&r(_)}}}class je extends De{constructor(f){super(),Ge(this,f,null,Me,He,{})}}export{je as default};
