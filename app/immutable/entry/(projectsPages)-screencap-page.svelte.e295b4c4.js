import{S as De,i as Ge,s as He,k as n,q as o,a as p,y as ge,l as i,m as l,r as c,h as r,c as h,z as ve,n as ke,b as d,G as t,A as _e,g as ye,d as be,B as $e,H as Qe}from"../chunks/index.4db08ef9.js";import{I as We}from"../chunks/IconListItem.e8682a0f.js";import{s as ze,I as Be,T as Ne}from"../chunks/svgs.2b602a4c.js";function qe(q){let m,y;return{c(){m=n("a"),y=o("Github repo"),this.h()},l(g){m=i(g,"A",{href:!0});var u=l(m);y=c(u,"Github repo"),u.forEach(r),this.h()},h(){ke(m,"href","https://github.com/goldentoaste/screenCap")},m(g,u){d(g,m,u),t(m,y)},p:Qe,d(g){g&&r(m)}}}function Me(q){let m,y,g,u,G,k,M,H,v,b,U,$,Q,s,I,F,V,E,j,J,L,K,X,S,Y,Z,x,ee,te,P,re,se,A,ae,ne,C,oe,ie,R,le,ce,T,fe,me,O,pe,W,_,he,w,ue,de,z;return u=new We({props:{path:ze.github,key:"github",$$slots:{default:[qe]},$$scope:{ctx:q}}}),b=new Be({props:{height:600,maxWidth:800,title:"Demo Images",items:[{desc:"Images pinned in front of other programs",src:"screencap/pinned.png"},{desc:"Right click menu showcasing the various features the program has at the moment",src:"screencap/menu.png"}]}}),$=new Ne({props:{input:[{name:"Gui",items:[{name:"Python",src:"icons/python.svg"},{name:"tkinter",src:"icons/tkinter.svg"},{name:"Qt",src:"icons/Qt.svg"}]},{name:"Others",items:[{name:"üõè Pillow"},{name:"Win32 api",src:"icons/windows.svg"},{name:"Nuitka",src:"icons/nuitka.svg"}]}]}}),{c(){m=n("h1"),y=o("Screencap :3"),g=p(),ge(u.$$.fragment),G=p(),k=n("p"),M=o(`A cross platform desktop app(windows only currently) that handles all your\r
    screen capturing needs! Designed to be efficient and customizable, through\r
    the extensive use of rebindable hotkeys.`),H=p(),v=n("div"),ge(b.$$.fragment),U=p(),ge($.$$.fragment),Q=o(`\r
\r
Some notable features:\r
\r
`),s=n("ul"),I=n("li"),F=o("Screen shot anything, anywhere"),V=p(),E=n("li"),j=o("Crop captures"),J=p(),L=n("li"),K=o("Pin image on top as a window, for reference"),X=p(),S=n("li"),Y=o("Copy and paste the image to easily share it"),Z=p(),x=n("li"),ee=o("Save the captured image as multiple formats"),te=p(),P=n("li"),re=o("Paint and sketch on images"),se=p(),A=n("li"),ae=o('Tracks previously closed images in a "Recycle Bin" for future use'),ne=p(),C=n("li"),oe=o("Rebindable hotkeys for most actions"),ie=p(),R=n("li"),le=o("Native global hotkeys for each OS"),ce=p(),T=n("li"),fe=o("Record a short .gif of region of screen (work in progress)"),me=p(),O=n("li"),pe=o("Supports Windows, Linux(soon), and MacOs(soon)"),W=p(),_=n("p"),he=o("A demo built using Tkinter is currently available "),w=n("a"),ue=o("Here"),de=o(`, currently I'm working to rebuild the program in Qt for better performance\r
    and cross platform compatibility.`),this.h()},l(e){m=i(e,"H1",{});var f=l(m);y=c(f,"Screencap :3"),f.forEach(r),g=h(e),ve(u.$$.fragment,e),G=h(e),k=i(e,"P",{});var D=l(k);M=c(D,`A cross platform desktop app(windows only currently) that handles all your\r
    screen capturing needs! Designed to be efficient and customizable, through\r
    the extensive use of rebindable hotkeys.`),D.forEach(r),H=h(e),v=i(e,"DIV",{class:!0});var B=l(v);ve(b.$$.fragment,B),U=h(B),ve($.$$.fragment,B),B.forEach(r),Q=c(e,`\r
\r
Some notable features:\r
\r
`),s=i(e,"UL",{});var a=l(s);I=i(a,"LI",{});var we=l(I);F=c(we,"Screen shot anything, anywhere"),we.forEach(r),V=h(a),E=i(a,"LI",{});var Ie=l(E);j=c(Ie,"Crop captures"),Ie.forEach(r),J=h(a),L=i(a,"LI",{});var Ee=l(L);K=c(Ee,"Pin image on top as a window, for reference"),Ee.forEach(r),X=h(a),S=i(a,"LI",{});var Le=l(S);Y=c(Le,"Copy and paste the image to easily share it"),Le.forEach(r),Z=h(a),x=i(a,"LI",{});var Se=l(x);ee=c(Se,"Save the captured image as multiple formats"),Se.forEach(r),te=h(a),P=i(a,"LI",{});var xe=l(P);re=c(xe,"Paint and sketch on images"),xe.forEach(r),se=h(a),A=i(a,"LI",{});var Pe=l(A);ae=c(Pe,'Tracks previously closed images in a "Recycle Bin" for future use'),Pe.forEach(r),ne=h(a),C=i(a,"LI",{});var Ae=l(C);oe=c(Ae,"Rebindable hotkeys for most actions"),Ae.forEach(r),ie=h(a),R=i(a,"LI",{});var Ce=l(R);le=c(Ce,"Native global hotkeys for each OS"),Ce.forEach(r),ce=h(a),T=i(a,"LI",{});var Re=l(T);fe=c(Re,"Record a short .gif of region of screen (work in progress)"),Re.forEach(r),me=h(a),O=i(a,"LI",{});var Te=l(O);pe=c(Te,"Supports Windows, Linux(soon), and MacOs(soon)"),Te.forEach(r),a.forEach(r),W=h(e),_=i(e,"P",{});var N=l(_);he=c(N,"A demo built using Tkinter is currently available "),w=i(N,"A",{href:!0});var Oe=l(w);ue=c(Oe,"Here"),Oe.forEach(r),de=c(N,`, currently I'm working to rebuild the program in Qt for better performance\r
    and cross platform compatibility.`),N.forEach(r),this.h()},h(){ke(v,"class","top svelte-14kyk3d"),ke(w,"href","https://github.com/goldentoaste/screenCap")},m(e,f){d(e,m,f),t(m,y),d(e,g,f),_e(u,e,f),d(e,G,f),d(e,k,f),t(k,M),d(e,H,f),d(e,v,f),_e(b,v,null),t(v,U),_e($,v,null),d(e,Q,f),d(e,s,f),t(s,I),t(I,F),t(s,V),t(s,E),t(E,j),t(s,J),t(s,L),t(L,K),t(s,X),t(s,S),t(S,Y),t(s,Z),t(s,x),t(x,ee),t(s,te),t(s,P),t(P,re),t(s,se),t(s,A),t(A,ae),t(s,ne),t(s,C),t(C,oe),t(s,ie),t(s,R),t(R,le),t(s,ce),t(s,T),t(T,fe),t(s,me),t(s,O),t(O,pe),d(e,W,f),d(e,_,f),t(_,he),t(_,w),t(w,ue),t(_,de),z=!0},p(e,[f]){const D={};f&1&&(D.$$scope={dirty:f,ctx:e}),u.$set(D)},i(e){z||(ye(u.$$.fragment,e),ye(b.$$.fragment,e),ye($.$$.fragment,e),z=!0)},o(e){be(u.$$.fragment,e),be(b.$$.fragment,e),be($.$$.fragment,e),z=!1},d(e){e&&r(m),e&&r(g),$e(u,e),e&&r(G),e&&r(k),e&&r(H),e&&r(v),$e(b),$e($),e&&r(Q),e&&r(s),e&&r(W),e&&r(_)}}}class je extends De{constructor(m){super(),Ge(this,m,null,Me,He,{})}}export{je as default};
