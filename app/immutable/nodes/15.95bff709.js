import{s as R,a as _,f as u,l as A,c as y,g as f,F as b,h as D,d as a,m as O,j as P,i as r,x as Q,y as W}from"../chunks/scheduler.9e384549.js";import{S as z,i as F,b as w,d as C,m as I,a as S,t as T,e as L}from"../chunks/index.8915a013.js";import{I as G}from"../chunks/IconListItem.d1573a2a.js";import{s as N,I as U,T as j}from"../chunks/svgs.882462a0.js";function B(k){let t,o="Github repo";return{c(){t=u("a"),t.textContent=o,this.h()},l(s){t=f(s,"A",{target:!0,href:!0,"data-svelte-h":!0}),b(t)!=="svelte-1t0c812"&&(t.textContent=o),this.h()},h(){P(t,"target","_blank"),P(t,"href","https://github.com/goldentoaste/screenCap")},m(s,h){r(s,t,h)},p:W,d(s){s&&a(t)}}}function E(k){let t,o,s,h=`A cross platform desktop app(windows only currently) that handles all your\r
    screen capturing needs! Designed to be efficient and customizable, through\r
    the extensive use of rebindable hotkeys.`,g,i,l,x,m,d,c,H="<li>Screen shot anything, anywhere</li> <li>Crop captures</li> <li>Pin image on top as a window, for reference</li> <li>Copy and paste the image to easily share it</li> <li>Save the captured image as multiple formats</li> <li>Paint and sketch on images</li> <li>Tracks previously closed images in a &quot;Recycle Bin&quot; for future use</li> <li>Rebindable hotkeys for most actions</li> <li>Native global hotkeys for each OS</li> <li>Record a short .gif of region of screen (work in progress)</li> <li>Supports Windows, Linux(soon), and MacOs(soon)</li>",$,p,M=`A demo built using Tkinter is currently available <a href="https://github.com/goldentoaste/screenCap">Here</a>, currently I&#39;m working to rebuild the program in Qt for better performance
    and cross platform compatibility.`,v;return t=new G({props:{path:N.github,key:"github",$$slots:{default:[B]},$$scope:{ctx:k}}}),l=new U({props:{height:600,maxWidth:800,title:"Demo Images",items:[{desc:"Images pinned in front of other programs",src:"screencap/pinned.png"},{desc:"Right click menu showcasing the various features the program has at the moment",src:"screencap/menu.png"}]}}),m=new j({props:{input:[{name:"Gui",items:[{name:"Python",src:"icons/python.svg"},{name:"tkinter",src:"icons/tkinter.svg"},{name:"Qt",src:"icons/Qt.svg"}]},{name:"Others",items:[{name:"üõè Pillow"},{name:"Win32 api",src:"icons/windows.svg"},{name:"Nuitka",src:"icons/nuitka.svg"}]}]}}),{c(){w(t.$$.fragment),o=_(),s=u("p"),s.textContent=h,g=_(),i=u("div"),w(l.$$.fragment),x=_(),w(m.$$.fragment),d=A(`\r
\r
Some notable features:\r
\r
`),c=u("ul"),c.innerHTML=H,$=_(),p=u("p"),p.innerHTML=M,this.h()},l(e){C(t.$$.fragment,e),o=y(e),s=f(e,"P",{"data-svelte-h":!0}),b(s)!=="svelte-1m5iaa1"&&(s.textContent=h),g=y(e),i=f(e,"DIV",{class:!0});var n=D(i);C(l.$$.fragment,n),x=y(n),C(m.$$.fragment,n),n.forEach(a),d=O(e,`\r
\r
Some notable features:\r
\r
`),c=f(e,"UL",{"data-svelte-h":!0}),b(c)!=="svelte-1wbpz89"&&(c.innerHTML=H),$=y(e),p=f(e,"P",{"data-svelte-h":!0}),b(p)!=="svelte-1l7nq6l"&&(p.innerHTML=M),this.h()},h(){P(i,"class","top svelte-14kyk3d")},m(e,n){I(t,e,n),r(e,o,n),r(e,s,n),r(e,g,n),r(e,i,n),I(l,i,null),Q(i,x),I(m,i,null),r(e,d,n),r(e,c,n),r(e,$,n),r(e,p,n),v=!0},p(e,[n]){const q={};n&1&&(q.$$scope={dirty:n,ctx:e}),t.$set(q)},i(e){v||(S(t.$$.fragment,e),S(l.$$.fragment,e),S(m.$$.fragment,e),v=!0)},o(e){T(t.$$.fragment,e),T(l.$$.fragment,e),T(m.$$.fragment,e),v=!1},d(e){e&&(a(o),a(s),a(g),a(i),a(d),a(c),a($),a(p)),L(t,e),L(l),L(m)}}}class Y extends z{constructor(t){super(),F(this,t,null,E,R,{})}}export{Y as component};
