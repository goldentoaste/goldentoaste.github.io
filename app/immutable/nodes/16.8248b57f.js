import{S as me,i as pe,s as ce,k as m,q as _,a as c,y as I,l as p,m as h,r as b,h as s,c as f,z as C,n as W,b as i,G as o,A as L,g as R,d as D,B as S,H as le}from"../chunks/index.830b111b.js";import{D as ie}from"../chunks/Divider.ce089eea.js";import{I as oe}from"../chunks/IconListItem.ccb3971a.js";import{s as re,I as fe,T as he}from"../chunks/svgs.f526f1d0.js";/* empty css                                    */function ue(F){let t,l;return{c(){t=m("a"),l=_("Github Repo"),this.h()},l(n){t=p(n,"A",{target:!0,href:!0});var a=h(t);l=b(a,"Github Repo"),a.forEach(s),this.h()},h(){W(t,"target","_blank"),W(t,"href","https://github.com/goldentoaste/turn_timer")},m(n,a){i(n,t,a),o(t,l)},p:le,d(n){n&&s(t)}}}function ge(F){let t,l;return{c(){t=m("a"),l=_("Try it here!"),this.h()},l(n){t=p(n,"A",{target:!0,href:!0});var a=h(t);l=b(a,"Try it here!"),a.forEach(s),this.h()},h(){W(t,"target","_blank"),W(t,"href","https://turn-timer.vercel.app/")},m(n,a){i(n,t,a),o(t,l)},p:le,d(n){n&&s(t)}}}function $e(F){let t,l,n,a,J,P,k,B,u,$,O,d,U,w,V,g,T,Q,x,q,v,X,Y,Z,M,y,G,ee,te,H,se,z;return k=new ie({}),$=new oe({props:{path:re.github,key:"github",$$slots:{default:[ue]},$$scope:{ctx:F}}}),d=new oe({props:{path:re.link,key:"link",$$slots:{default:[ge]},$$scope:{ctx:F}}}),w=new ie({}),T=new fe({props:{containerStyle:"flex-basis:500px;",maxWidth:500,height:300,title:"Timer demos",items:[{desc:"Ui of the timer when the game has started",src:"timer/timerPage.png"},{desc:"Host's options for setting up lobby",src:"timer/rules.png"},{desc:"A player taking priority on another player's turn",src:"timer/prio.png"}]}}),x=new he({props:{input:[{name:"Front End",items:[{name:"SvelteKit",src:"icons/svelte.svg"}]},{name:"Deployment",items:[{name:"Vercel",path:re.vercel}]},{name:"Network",items:[{name:"FireBase",src:"icons/firebase.png"},{name:"WebRtc",src:"icons/webrtc.svg"}]}]}}),{c(){t=m("h1"),l=_("Turn timer"),n=c(),a=m("p"),J=_(`This app was (inspired by?) made in response to slow playing in my Magic the Gathering EDH\r
    group. The timer app connects any number of players together and tracks remaining time for each player. \r
    Information is shared and kept in sync for each client to simplify communication and speed up games.`),P=c(),I(k.$$.fragment),B=c(),u=m("div"),I($.$$.fragment),O=c(),I(d.$$.fragment),U=c(),I(w.$$.fragment),V=c(),g=m("div"),I(T.$$.fragment),Q=c(),I(x.$$.fragment),q=c(),v=m("p"),X=_(`Current the program uses WebRTC to connect the host to players and eachother, the players sends \r
    message to all the other clients in order to update game state. Firebase is used as the match making server\r
    to establish the WebRTC connections, as an intermediary for clients to exchange connection offers, anwsers, and ICE candidates.\r
    `),Y=m("br"),Z=_(`\r
    This network arrangement is chosen for the following reasons:`),M=c(),y=m("ul"),G=m("li"),ee=_(`Lower server cost. Since the clients are sending messages to others directly, there's no need to call a server api excessively, or \r
        to keep multiple websocket connections alive for server to proxy messages.`),te=c(),H=m("li"),se=_(`Lower latency. This peer to peer arrangement makes it so that data does not need take an extra trip to a server before reaching\r
        destination.`),this.h()},l(e){t=p(e,"H1",{});var r=h(t);l=b(r,"Turn timer"),r.forEach(s),n=f(e),a=p(e,"P",{});var A=h(a);J=b(A,`This app was (inspired by?) made in response to slow playing in my Magic the Gathering EDH\r
    group. The timer app connects any number of players together and tracks remaining time for each player. \r
    Information is shared and kept in sync for each client to simplify communication and speed up games.`),A.forEach(s),P=f(e),C(k.$$.fragment,e),B=f(e),u=p(e,"DIV",{class:!0});var E=h(u);C($.$$.fragment,E),O=f(E),C(d.$$.fragment,E),E.forEach(s),U=f(e),C(w.$$.fragment,e),V=f(e),g=p(e,"DIV",{class:!0});var K=h(g);C(T.$$.fragment,K),Q=f(K),C(x.$$.fragment,K),K.forEach(s),q=f(e),v=p(e,"P",{});var N=h(v);X=b(N,`Current the program uses WebRTC to connect the host to players and eachother, the players sends \r
    message to all the other clients in order to update game state. Firebase is used as the match making server\r
    to establish the WebRTC connections, as an intermediary for clients to exchange connection offers, anwsers, and ICE candidates.\r
    `),Y=p(N,"BR",{}),Z=b(N,`\r
    This network arrangement is chosen for the following reasons:`),N.forEach(s),M=f(e),y=p(e,"UL",{});var j=h(y);G=p(j,"LI",{});var ne=h(G);ee=b(ne,`Lower server cost. Since the clients are sending messages to others directly, there's no need to call a server api excessively, or \r
        to keep multiple websocket connections alive for server to proxy messages.`),ne.forEach(s),te=f(j),H=p(j,"LI",{});var ae=h(H);se=b(ae,`Lower latency. This peer to peer arrangement makes it so that data does not need take an extra trip to a server before reaching\r
        destination.`),ae.forEach(s),j.forEach(s),this.h()},h(){W(u,"class","points svelte-56aahs"),W(g,"class","top svelte-56aahs")},m(e,r){i(e,t,r),o(t,l),i(e,n,r),i(e,a,r),o(a,J),i(e,P,r),L(k,e,r),i(e,B,r),i(e,u,r),L($,u,null),o(u,O),L(d,u,null),i(e,U,r),L(w,e,r),i(e,V,r),i(e,g,r),L(T,g,null),o(g,Q),L(x,g,null),i(e,q,r),i(e,v,r),o(v,X),o(v,Y),o(v,Z),i(e,M,r),i(e,y,r),o(y,G),o(G,ee),o(y,te),o(y,H),o(H,se),z=!0},p(e,[r]){const A={};r&1&&(A.$$scope={dirty:r,ctx:e}),$.$set(A);const E={};r&1&&(E.$$scope={dirty:r,ctx:e}),d.$set(E)},i(e){z||(R(k.$$.fragment,e),R($.$$.fragment,e),R(d.$$.fragment,e),R(w.$$.fragment,e),R(T.$$.fragment,e),R(x.$$.fragment,e),z=!0)},o(e){D(k.$$.fragment,e),D($.$$.fragment,e),D(d.$$.fragment,e),D(w.$$.fragment,e),D(T.$$.fragment,e),D(x.$$.fragment,e),z=!1},d(e){e&&s(t),e&&s(n),e&&s(a),e&&s(P),S(k,e),e&&s(B),e&&s(u),S($),S(d),e&&s(U),S(w,e),e&&s(V),e&&s(g),S(T),S(x),e&&s(q),e&&s(v),e&&s(M),e&&s(y)}}}class ke extends me{constructor(t){super(),pe(this,t,null,$e,ce,{})}}export{ke as component};
